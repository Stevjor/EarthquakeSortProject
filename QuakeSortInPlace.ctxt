#BlueJ class context
comment0.target=QuakeSortInPlace
comment1.params=
comment1.target=QuakeSortInPlace()
comment10.params=
comment10.target=void\ testSort()
comment11.params=
comment11.target=void\ createCSV()
comment12.params=list
comment12.target=void\ dumpCSV(java.util.ArrayList)
comment2.params=quakes\ from
comment2.target=int\ getSmallestMagnitude(java.util.ArrayList,\ int)
comment3.params=quakeData\ from
comment3.target=int\ getLargestDepth(java.util.ArrayList,\ int)
comment3.text=\r\n\ This\ method\ gets\ the\ largest\ depth\ of\ an\ ArrayList\ of\ type\ QuakeEntry\r\n\ and\ returns\ the\ position\ of\ such\ index.\r\n
comment4.params=quakes
comment4.target=boolean\ checkInSortedOrder(java.util.ArrayList)
comment4.text=\r\n\ Returns\ true\ if\ the\ earthquakes\ are\ in\ sorted\ order\r\n\ by\ magnitude\ from\ smallest\ to\ largest.\ Otherwise\ this\ methods\ \r\nreturns\ false.
comment5.params=in
comment5.target=void\ sortByLargestDepth(java.util.ArrayList)
comment5.text=\r\n\ Sorts\ an\ ArrayList\ of\ type\ QuakeEntry\ from\ largest\ depth\ to\ lowest\r\n\ depth.\r\n
comment6.params=in
comment6.target=void\ sortByMagnitude(java.util.ArrayList)
comment7.params=quakeData\ numSorted
comment7.target=void\ onePassBubbleSort(java.util.ArrayList,\ int)
comment7.text=\ \r\n\ Makes\ one\ buble\ pass\ through\ the\ quakeData\ ArrayList.\r\n
comment8.params=in
comment8.target=void\ sortByMagnitudeWithBubbleSort(java.util.ArrayList)
comment8.text=\r\n\ Sorts\ an\ ArrayList\ of\ type\ QuakeEntry\ from\ least\ to\ greatest.\r\n
comment9.params=in
comment9.target=void\ sortByMagnitudeWithBubbleSortWithCheck(java.util.ArrayList)
comment9.text=\r\n\ This\ method\ prints\ how\ many\ passes\ were\ needed\ to\ sort\ the\ elements.\ \r\n
numComments=13
